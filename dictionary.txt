##################################################
                     СЛОВАРЬ
##################################################
Словарь (его еще называют ассоциативным списком) – неупорядоченная совокупность произвольных объектов с доступом по ключу.
Вот все способы создать словарь:
a = dict(one=1, two=2, three=3)

b = {'one': 1, 'two': 2, 'three': 3}

c = dict(zip(['one', 'two', 'three'], [1, 2, 3]))

d = dict([('two', 2), ('one', 1), ('three', 3)])

e = dict({'three': 3, 'one': 1, 'two': 2})

f = dict({'one': 1, 'three': 3}, two=2)

Внутри функции dict() необязательно использавать ковычки для названия ключей, она сделает это за вас.
Ввод : d = dict(artem = 39,yulia = 37)
Вывод : {'artem': 39, 'yulia': 37}
Словари как и списки поддерживают операцию индексации, только вместо индекса нужно указывать значения ключа.
У словарей вообще нету понятия индекса, потому что словари - это неупорядоченная коллекция данных.
Поэтому обращаться можно только по ключу через квадратные скобки
Например:
d['artem'] - вернет значение ключа т.е 39
Для того, чтобы добавить новое значение в словарь необходимо обратится по новому ключу и присвоить туда значение вот в таком формате:
d[новый ключ] = значение
Если присвоить новое значение уже существующему ключу, то мы просто заменим старое значение.
Значит в словаре не может быть двух пар с одинаковыми ключами.
И раз мы смогли изменить существующий элемент словаря, значит можно сделать вывод что
словарь является изменяемым объектом
Для того, чтобы удалить значение из словаря необходимо воспользоваться функцией del и обратится по ключу у словаря
Например: del d['artem'] удалит из словаря d и ключ и его значение
При попытке удалить ключ, которого нет в словаре,  возникнет ошибка KeyError.
Требования к ключу словаря

Есть важная особенность при работе с ключами словаря, которую нужно запомнить, а именно
Ключом может быть только неизменяемый объект
К неизменяемым объектам относятся:
    целые(тип int) и вещественные(тип float) числа
    строки (тип str)
    None
    кортежи (тип tuple)
    неизменяемые множества (тип frozenset) (Еще не проходили, разберем в этом модуле)
К изменяемым объектам относятся:

    списки (тип list)
    множества (тип set) (Еще не проходили, разберем в этом модуле)
    сами словари (тип dict)
Из этого следует, что ключом словаря не может быть список, множество или словарь.
Если попытаетесь использовать изменяемый тип в качестве ключа, получите ошибку TypeError: unhashable type
В качестве значения словаря может выступать любой тип данных.